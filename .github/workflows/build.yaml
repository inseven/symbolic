name: build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:

  app-build:

    runs-on: macos-ventura

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install dependencies
      run: scripts/install-dependencies.sh

    - name: Build and test
      env:
        APPLE_DEVELOPMENT_CERTIFICATE_BASE64: ${{ secrets.PERSONAL_APPLE_DEVELOPMENT_CERTIFICATE_BASE64 }}
        APPLE_DEVELOPMENT_CERTIFICATE_PASSWORD: ${{ secrets.PERSONAL_APPLE_DEVELOPMENT_CERTIFICATE_PASSWORD }}
        APPLE_DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.PERSONAL_APPLE_DISTRIBUTION_CERTIFICATE_BASE64 }}
        APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.PERSONAL_APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD }}
        MACOS_DEVELOPER_INSTALLER_CERTIFICATE_BASE64: ${{ secrets.PERSONAL_MACOS_DEVELOPER_INSTALLER_CERTIFICATE_BASE64 }}
        MACOS_DEVELOPER_INSTALLER_CERTIFICATE_PASSWORD: ${{ secrets.PERSONAL_MACOS_DEVELOPER_INSTALLER_CERTIFICATE_PASSWORD }}

        APPLE_API_KEY_BASE64: ${{ secrets.PERSONAL_APPLE_API_KEY_BASE64 }}
        APPLE_API_KEY_ISSUER_ID: ${{ secrets.PERSONAL_APPLE_API_KEY_ISSUER_ID }}
        APPLE_API_KEY_ID: ${{ secrets.PERSONAL_APPLE_API_KEY_ID }}

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE: ${{ github.ref == 'refs/heads/main' }}

      run: |
        scripts/build.sh

    - name: Archive the binary
      uses: actions/upload-artifact@v4
      with:
        path: build/build-*.zip
        if-no-files-found: error

  website-build:

    needs: app-build

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout required submodules
      run: |
        git submodule update --init --depth 1 scripts/build-tools
        git submodule update --init --depth 1 scripts/changes
        git submodule update --init --depth 1 docs/_theme

    - name: Install the tool dependencies
      uses: jdx/mise-action@v2

    - name: Install dependencies
      run: scripts/install-dependencies.sh

    - name: Build website
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        scripts/build-website.sh
        chmod -v -R +rX "_site/"

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3

  website-deploy:

    needs: website-build
    if: ${{ github.ref == 'refs/heads/main' }}

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
